name: CI

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request:
    branches: [ "master", "main" ]
    paths-ignore: [ "docs/**" ]

  push:
    branches: [ "master", "main" ]
    paths-ignore: [ "docs/**" ]


jobs:
  linter:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Code Repository
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      # Run all pre-commit hooks on all the files.
      # Getting only staged files can be tricky in case a new PR is opened
      # since the action is run on a branch in detached head state
      - name: Install and Run Pre-commit 
        uses: pre-commit/action@v2.0.0

  # With no caching at all the entire ci process takes 4m 30s to complete!
  Build:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout Code Repository
        uses: actions/checkout@v2

      - name: Build the Stack
        run:  docker-compose -f production.yml build

      - name: Run DB Migrations
        run:  docker-compose -f production.yml run --rm django python manage.py migrate

      - name: Run Django Tests
        run:  docker-compose -f production.yml run django pytest

      - name: Tear down the Stack
        run:  docker-compose -f production.yml down

  DeployStaging:
    name: Deploy to Staging 
    if: github.event.ref == 'refs/heads/main'
    needs: [Build]
    runs-on: ubuntu-latest
    environment: 
      name: staging
      url: STAGING_SERVER_URL
    steps:
      - name: Remote SSH Commands
      
        uses: fifsky/ssh-action@v0.0.5
      
        with:
       
       
          host: ${{ secrets.SERVER_IP }}
          port: ${{ secrets.SERVER_PORT }}
          user: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_KEY}}
      
      - name: Build the Stack
        run:  docker-compose -f production.yml build
    

      - name: Run DB Migrations
        run:  docker-compose -f production.yml run --rm django python manage.py migrate

      - name: Run Django Tests
        run:  docker-compose -f production.yml run django pytest
      - name: Build the Stack
        run:  docker-compose -f production.yml up

      - name: Deploy
        run: echo I am deploying! 


  DeployProd:
    name: Deploy to Production 
    needs: [DeployStaging]
    runs-on: ubuntu-latest
    environment: 
      name: production
      url: PRODUCTION_SERVER_URL
    
    steps:

      - name: Build the Stack
        run:  docker-compose -f production.yml build

      - name: Run DB Migrations
        run:  docker-compose -f production.yml run --rm django python manage.py migrate

      - name: Run Django app
        run:  docker-compose -f production.yml up

      - name: Deploy
        run: echo I am deploying! 
    

